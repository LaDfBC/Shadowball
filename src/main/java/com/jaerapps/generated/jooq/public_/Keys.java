/*
 * This file is generated by jOOQ.
 */
package com.jaerapps.generated.jooq.public_;


import com.jaerapps.generated.jooq.public_.tables.FlywaySchemaHistory;
import com.jaerapps.generated.jooq.public_.tables.Game;
import com.jaerapps.generated.jooq.public_.tables.Guess;
import com.jaerapps.generated.jooq.public_.tables.Play;
import com.jaerapps.generated.jooq.public_.tables.records.FlywaySchemaHistoryRecord;
import com.jaerapps.generated.jooq.public_.tables.records.GameRecord;
import com.jaerapps.generated.jooq.public_.tables.records.GuessRecord;
import com.jaerapps.generated.jooq.public_.tables.records.PlayRecord;

import org.jooq.ForeignKey;
import org.jooq.TableField;
import org.jooq.UniqueKey;
import org.jooq.impl.DSL;
import org.jooq.impl.Internal;


/**
 * A class modelling foreign key relationships and constraints of tables in 
 * public.
 */
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class Keys {

    // -------------------------------------------------------------------------
    // UNIQUE and PRIMARY KEY definitions
    // -------------------------------------------------------------------------

    public static final UniqueKey<FlywaySchemaHistoryRecord> FLYWAY_SCHEMA_HISTORY_PK = Internal.createUniqueKey(FlywaySchemaHistory.FLYWAY_SCHEMA_HISTORY, DSL.name("flyway_schema_history_pk"), new TableField[] { FlywaySchemaHistory.FLYWAY_SCHEMA_HISTORY.INSTALLED_RANK }, true);
    public static final UniqueKey<GameRecord> GAME_PKEY = Internal.createUniqueKey(Game.GAME, DSL.name("game_pkey"), new TableField[] { Game.GAME.GAME_ID }, true);
    public static final UniqueKey<GuessRecord> GUESS_PKEY = Internal.createUniqueKey(Guess.GUESS, DSL.name("guess_pkey"), new TableField[] { Guess.GUESS.MEMBER_ID }, true);
    public static final UniqueKey<PlayRecord> PLAY_PKEY = Internal.createUniqueKey(Play.PLAY, DSL.name("play_pkey"), new TableField[] { Play.PLAY.PLAY_ID }, true);

    // -------------------------------------------------------------------------
    // FOREIGN KEY definitions
    // -------------------------------------------------------------------------

    public static final ForeignKey<GuessRecord, PlayRecord> GUESS__GUESS_PLAY_ID_FK = Internal.createForeignKey(Guess.GUESS, DSL.name("guess_play_id_fk"), new TableField[] { Guess.GUESS.PLAY_ID }, Keys.PLAY_PKEY, new TableField[] { Play.PLAY.PLAY_ID }, true);
    public static final ForeignKey<PlayRecord, GameRecord> PLAY__PLAY_GAME_ID_FK = Internal.createForeignKey(Play.PLAY, DSL.name("play_game_id_fk"), new TableField[] { Play.PLAY.GAME_ID }, Keys.GAME_PKEY, new TableField[] { Game.GAME.GAME_ID }, true);
}
